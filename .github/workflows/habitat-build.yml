on:
  workflow_call:

env:
  # BLDR URL Defined as: 'https://bldr.habitat.sh/' but as an env var in workspace settings. 
  BLDR_URL: ${{vars.BLDR_URL}}
   # HAB_ORIGIN Defined as: 'chef-platform' defined in workspace settings.
  HAB_ORIGIN: ${{vars.HAB_ORIGIN}}
  # BLDR_CHANNEL defaulted to unstable, but can be switched to stable, it is defined via the environment setting https://docs.github.com/en/actions/deployment/targeting-different-environments/using-environments-for-deployment#using-an-environment
  BLDR_CHANNEL: ${{ vars.BLDR_CHANNEL }}
  # HABITAT_VERSION_SET this is the version of habitat CLI you are using, defaults to latest.
  HABITAT_VERSION_SET: ${{vars.HABITAT_VERSION_SET}}
  # HAB_AUTH_TOKEN your orgs/projects auth token value
  HAB_AUTH_TOKEN: ${{ secrets.HAB_AUTH_TOKEN }}
  # HABITAT_TARGET this is the CPU arch for the linux CLI tool, its defaulted to x86_64
  #HABITAT_TARGET: $#{{vars.HABITAT_TARGET}}


permissions:
  contents: write

jobs:
  agent-matrix:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest]
      # matrix strategy is described at https://docs.github.com/en/actions/using-jobs/using-a-matrix-for-your-jobs

    runs-on: ${{ matrix.os }}
    # free runner types are https://docs.github.com/en/actions/using-github-hosted-runners/about-github-hosted-runners/about-github-hosted-runners
    # from macos-latest, windows-latest, ubuntu-latest, ubuntu-20.04, ubuntu-18.04, ubuntu-16.04, windows-2019, windows-2016
    # included software packages on runners are at https://github.com/actions/runner-images#available-images 
    # defaulted to unstable, but can be switched to stable, it is defined via the environment setting https://docs.github.com/en/actions/deployment/targeting-different-environments/using-environments-for-deployment#using-an-environment
    # environment: unstable 
    steps:
      - name: print OS
        run: echo "--- ${{ matrix.os }}"
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0


      - name: install habitat on Linux
        if: ${{ matrix.os == 'ubuntu-latest' }}
        shell: bash
        run: |
          echo "--- STARTING HAB INSTALL ON  ${{ matrix.os }} UBUNTU with habitat version:${{vars.HABITAT_VERSION_SET}}"
          export HABITAT_VERSION="${{vars.HABITAT_VERSION_SET}}"
          HABITAT_VERSION="${HABITAT_VERSION:?HABITAT_VERSION must be set}"
          HABITAT_TARGET="${HABITAT_TARGET:-x86_64-linux}"
          curl https://raw.githubusercontent.com/habitat-sh/habitat/master/components/hab/install.sh | sudo bash -s -- -v "$HABITAT_VERSION" -t "$HABITAT_TARGET"
      - name: run Habitat packaging (linux)
        if: ${{ matrix.os == 'ubuntu-latest' }}
        shell: bash
        run: |
          export HAB_STUDIO_SECRET_GITHUB_TOKEN=${{secrets.GH_TOKEN}}
          hab license accept
          hab origin key download $HAB_ORIGIN
          hab origin key download --auth $HAB_AUTH_TOKEN --secret $HAB_ORIGIN
          echo "--- running linux hab build"
          hab pkg build .
      - name: Install Habitat on Windows
        if: ${{ matrix.os == 'windows-latest' }}
        shell: pwsh
        run: |
          write-output "--- STARTING HAB INSTALL ON ${{ matrix.os }} WINDOWS with habitat version:${{vars.HABITAT_VERSION_SET}}"
          $env:HAB_LICENSE = "accept-no-persist"
          Invoke-Expression "& { $(Invoke-RestMethod https://raw.githubusercontent.com/habitat-sh/habitat/main/components/hab/install.ps1) } -Version ${{vars.HABITAT_VERSION_SET}}"
      - name: run habitat packaging windows
        if: ${{ matrix.os == 'windows-latest' }}
        shell: pwsh
        run: |
          $env:Path += ";C:\ProgramData\Habitat"
          $env:GITHUB_TOKEN="${{ secrets.GH_TOKEN }}"
          hab license accept
          hab origin key download ${{ env.HAB_ORIGIN }}
          hab origin key download --auth ${{ secrets.HAB_AUTH_TOKEN }} --secret ${{ env.HAB_ORIGIN }}
          write-output "--- running windows hab build"
          hab pkg build .